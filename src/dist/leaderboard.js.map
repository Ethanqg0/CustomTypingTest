{
  "version": 3,
  "sources": ["../ts/leaderboard.ts"],
  "sourcesContent": ["interface User {\n  full_name: string;\n  coach?: boolean;\n  best_test: TestRecord;\n  // tests: Array<FilteredTest>;\n}\n\ninterface TestRecord {\n  wpm: number;\n  accuracy: number;\n}\n\nexport interface BestTest {\n  full_name?: string;\n  wpm: number;\n  accuracy: number;\n}\n\nfunction rankByWPM(tests: Array<BestTest>) {\n  const test = tests.sort((a, b) => b[\"wpm\"] - a[\"wpm\"]);\n  return test;\n}\n\nfunction filterTests(users: Array<User>) {\n  const filteredTests: Array<BestTest> = [];\n\n  for (const user of users) {\n    if (user[\"coach\"] === true) {\n      continue\n    }\n    const test: TestRecord = user[\"best_test\"]\n    if (!test) continue\n    filteredTests.push(({\n      full_name: user[\"full_name\"],\n      wpm: test[\"wpm\"],\n      accuracy: test[\"accuracy\"],\n    } as BestTest))\n  }\n\n  return filteredTests;\n}\n\n(window as any).fetchAndDisplayLeaderboard = async () => {\n  try {\n    const response = await fetch(\n      \"https://tcs-typer.netlify.app/api/leaderboard\"\n      // \"http://localhost:8888/api/leaderboard\"\n    );\n    if (!response) {\n      throw new Error(\"Failed to fetch tests from backend server.\");\n    }\n\n    let tests = await response.json();\n\n    tests = filterTests(tests);\n    tests = rankByWPM(tests);\n\n    const leaderboard = document.querySelector(\n      \".flex-column\"\n    ) as HTMLDivElement;\n    leaderboard.innerHTML = \"\"\n    for (let i: number = 0; i < tests.length; i++) {\n      const player = leaderboard.appendChild(\n        document.createElement(\"div\") as HTMLDivElement\n      );\n      player.classList.add(\"leaderboard-player\");\n\n      const name = player.appendChild(\n        document.createElement(\"h3\") as HTMLHeadingElement\n      );\n\n      name.innerHTML = tests[i][\"full_name\"];\n      if (i === 0) {\n        name.innerHTML += \" \uD83E\uDD47\";\n        name.style.fontWeight = \"600\";\n      } else if (i === 1) {\n        name.innerHTML += \" \uD83E\uDD48\";\n      } else if (i === 2) {\n        name.innerHTML += \" \uD83E\uDD49\";\n      }\n\n      const div = player.appendChild(\n        document.createElement(\"div\") as HTMLDivElement\n      );\n      div.classList.add(\"wpm-accuracy\");\n      const wpm = div.appendChild(\n        document.createElement(\"h4\") as HTMLParagraphElement\n      );\n      wpm.innerHTML = tests[i][\"wpm\"];\n      const accuracy = div.appendChild(\n        document.createElement(\"h4\") as HTMLParagraphElement\n      );\n      accuracy.innerHTML = tests[i][\"accuracy\"] + \"%\";\n    }\n  } catch (error) {\n    console.error(\"An error occurred while fetching the leaderboard: \", error);\n  }\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n  // When the page is loaded, fetch and display the leaderboard\n  if ((<any>window).fetchAndDisplayLeaderboard) {\n    (<any>window).fetchAndDisplayLeaderboard();\n  }\n\n  const leaderboardModal = document.getElementById(\n    \"leaderboard-modal\"\n  ) as HTMLDialogElement;\n  const openModal = document.getElementById(\"leaderboard-toggle\");\n  const closeModal = document.getElementById(\"close-modal\");\n\n  openModal?.addEventListener(\"click\", () => {\n    leaderboardModal.showModal();\n  });\n  leaderboardModal?.addEventListener(\"click\", (e) => {\n    if (e.target !== leaderboardModal) return\n    leaderboardModal.close()\n  })\n  closeModal?.addEventListener(\"click\", () => {\n    leaderboardModal.close();\n  });\n});"],
  "mappings": "gOAkBA,SAASA,EAAUC,EAAwB,CAEzC,OADaA,EAAM,KAAK,CAACC,EAAGC,IAAMA,EAAE,IAASD,EAAE,GAAM,CAEvD,CAEA,SAASE,EAAYC,EAAoB,CACvC,IAAMC,EAAiC,CAAC,EAExC,QAAWC,KAAQF,EAAO,CACxB,GAAIE,EAAK,QAAa,GACpB,SAEF,IAAMC,EAAmBD,EAAK,UACzBC,GACLF,EAAc,KAAM,CAClB,UAAWC,EAAK,UAChB,IAAKC,EAAK,IACV,SAAUA,EAAK,QACjB,CAAc,CAChB,CAEA,OAAOF,CACT,CAEC,OAAe,2BAA6B,IAAYG,EAAA,wBACvD,GAAI,CACF,IAAMC,EAAW,MAAM,MACrB,+CAEF,EACA,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,4CAA4C,EAG9D,IAAIT,EAAQ,MAAMS,EAAS,KAAK,EAEhCT,EAAQG,EAAYH,CAAK,EACzBA,EAAQD,EAAUC,CAAK,EAEvB,IAAMU,EAAc,SAAS,cAC3B,cACF,EACAA,EAAY,UAAY,GACxB,QAASC,EAAY,EAAGA,EAAIX,EAAM,OAAQW,IAAK,CAC7C,IAAMC,EAASF,EAAY,YACzB,SAAS,cAAc,KAAK,CAC9B,EACAE,EAAO,UAAU,IAAI,oBAAoB,EAEzC,IAAMC,EAAOD,EAAO,YAClB,SAAS,cAAc,IAAI,CAC7B,EAEAC,EAAK,UAAYb,EAAMW,CAAC,EAAE,UACtBA,IAAM,GACRE,EAAK,WAAa,aAClBA,EAAK,MAAM,WAAa,OACfF,IAAM,EACfE,EAAK,WAAa,aACTF,IAAM,IACfE,EAAK,WAAa,cAGpB,IAAMC,EAAMF,EAAO,YACjB,SAAS,cAAc,KAAK,CAC9B,EACAE,EAAI,UAAU,IAAI,cAAc,EAChC,IAAMC,EAAMD,EAAI,YACd,SAAS,cAAc,IAAI,CAC7B,EACAC,EAAI,UAAYf,EAAMW,CAAC,EAAE,IACzB,IAAMK,EAAWF,EAAI,YACnB,SAAS,cAAc,IAAI,CAC7B,EACAE,EAAS,UAAYhB,EAAMW,CAAC,EAAE,SAAc,GAC9C,CACF,OAASM,EAAO,CACd,QAAQ,MAAM,qDAAsDA,CAAK,CAC3E,CACF,GAEA,OAAO,iBAAiB,mBAAoB,IAAYT,EAAA,wBAE5C,OAAQ,4BACV,OAAQ,2BAA2B,EAG3C,IAAMU,EAAmB,SAAS,eAChC,mBACF,EACMC,EAAY,SAAS,eAAe,oBAAoB,EACxDC,EAAa,SAAS,eAAe,aAAa,EAExDD,GAAA,MAAAA,EAAW,iBAAiB,QAAS,IAAM,CACzCD,EAAiB,UAAU,CAC7B,GACAA,GAAA,MAAAA,EAAkB,iBAAiB,QAAUG,GAAM,CAC7CA,EAAE,SAAWH,GACjBA,EAAiB,MAAM,CACzB,GACAE,GAAA,MAAAA,EAAY,iBAAiB,QAAS,IAAM,CAC1CF,EAAiB,MAAM,CACzB,EACF,EAAC",
  "names": ["rankByWPM", "tests", "a", "b", "filterTests", "users", "filteredTests", "user", "test", "__async", "response", "leaderboard", "i", "player", "name", "div", "wpm", "accuracy", "error", "leaderboardModal", "openModal", "closeModal", "e"]
}
